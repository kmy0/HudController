name: Release
on:
  workflow_dispatch:
jobs:
  release:
    runs-on: windows-latest
    env:
      BUILD_TYPE: Release
    steps:
      - name: Checkout (with submodules)
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Configure CMake (HudController_util)
        run: cmake -S ${{ github.workspace }}/deps/HudController_util -B ${{ github.workspace }}/deps/HudController_util/build -G "Visual Studio 17 2022" -A x64 -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DDEVELOPER_MODE=ON "-DCMAKE_POLICY_VERSION_MINIMUM=3.5"

      - name: Build HudController_util
        run: cmake --build ${{ github.workspace }}/deps/HudController_util/build --config ${{ env.BUILD_TYPE }}

      - name: Copy HudController_util DLL
        run: |
          mkdir -p reframework/plugins
          dir deps\\HudController_util\\bin\\*.dll
          copy deps\\HudController_util\\bin\\*.dll reframework\\plugins\\

      - name: Generate version + package
        shell: bash
        run: |
          BASE_VERSION=$(git describe --tags --always)
          BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD)
          CLEAN_BRANCH=$(echo "$BRANCH_NAME" | sed 's/[^a-zA-Z0-9.-]/-/g')

          if [ "$BRANCH_NAME" != "main" ]; then
            RELEASE_VERSION="${BASE_VERSION}+${CLEAN_BRANCH}"
            COMMIT_VERSION="${BASE_VERSION}+${BRANCH_NAME}"
          else
            RELEASE_VERSION="$BASE_VERSION"
            COMMIT_VERSION="$BASE_VERSION"
          fi

          echo "RELEASE_VERSION=$RELEASE_VERSION" >> $GITHUB_ENV

          mkdir -p reframework/autorun/HudController/config
          cat > reframework/autorun/HudController/config/version.lua << EOF
          return {
              version = "$(git describe --tags --abbrev=0)",
              commit = "$COMMIT_VERSION",
          }
          EOF

          powershell Compress-Archive -Path reframework -DestinationPath "HudController-${RELEASE_VERSION}.zip"

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          repo: HudController-releases
          owner: kmy0
          token: ${{ secrets.RELEASE_REPO_TOKEN }}
          name: "${{ env.RELEASE_VERSION }}"
          tag: "${{ env.RELEASE_VERSION }}"
          artifacts: "HudController-*.zip"
          makeLatest: true
